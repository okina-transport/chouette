<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>mobi.chouette</groupId>
	<artifactId>mobi.chouette</artifactId>
	<version>5.4-mobi-iti-SNAPSHOT</version>

	<packaging>pom</packaging>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<maven.compiler.target>11</maven.compiler.target>
		<maven.compiler.source>11</maven.compiler.source>

		<wildfly.version>26.1.2.Final</wildfly.version>
		<wildfly.core.version>18.1.2.Final</wildfly.core.version>

		<slf4j.version>1.7.36</slf4j.version>

		<version.wildfly.maven.plugin>3.0.2.Final</version.wildfly.maven.plugin>
		<version.compiler.plugin>3.10.0</version.compiler.plugin>
		<version.jaxb2.plugin>1.5</version.jaxb2.plugin>
		<version.jar.plugin>3.2.2</version.jar.plugin>
		<version.war.plugin>3.3.2</version.war.plugin>
		<version.ejb.plugin>3.1.0</version.ejb.plugin>
		<version.ear.plugin>3.2.0</version.ear.plugin>
		<version.resources.plugin>3.2.0</version.resources.plugin>
		<version.dependency.plugin>3.2.0</version.dependency.plugin>
		<version.source.plugin>3.2.1</version.source.plugin>
		<version.javadoc.plugin>3.3.2</version.javadoc.plugin>
		<version.site.plugin>3.11.0</version.site.plugin>
		<version.surefire.plugin>2.22.2</version.surefire.plugin>
		<version.assembly.plugin>3.3.0</version.assembly.plugin>
		<version.build.helper.plugin>3.3.0</version.build.helper.plugin>
		<version.clean.plugin>3.1.0</version.clean.plugin>
		<version.install.plugin>2.5.2</version.install.plugin>
		<version.processor.plugin>2.2.4</version.processor.plugin>

		<postgresql.version>42.5.0</postgresql.version>
		<postgis.version>2021.1.0</postgis.version>
		<hibernate.version>5.3.28.Final</hibernate.version>
		<jts.version>1.14.0</jts.version>
		<geolatte-geom.version>1.3.0</geolatte-geom.version>
		<geotools.version>19.4</geotools.version>

		<dom4j.version>2.1.3</dom4j.version>
		<jettison.version>1.5.1</jettison.version>

		<lombok-version>1.18.24</lombok-version>
		<lombok-maven-plugin-version>1.18.20.0</lombok-maven-plugin-version>
		<prometheus.agent.version>0.17.2</prometheus.agent.version>
		<guava.version>31.1-jre</guava.version>
		<commons-lang3.version>3.12.0</commons-lang3.version>
		<zt-zip.version>1.15</zt-zip.version>

		<project.rootDir>${project.basedir}</project.rootDir>

 	    <netex-java-model.version>2.0.4-NETEX-FR</netex-java-model.version>
		<entur.helpers.version>1.85</entur.helpers.version>
		<owasp-dependency-check-plugin.version>7.2.1</owasp-dependency-check-plugin.version>

		<wildfly-arquillian-container-embedded.version>3.0.1.Final</wildfly-arquillian-container-embedded.version>


	</properties>
	<repositories>
		<repository>
			<id>jboss</id>
			<url>https://repository.jboss.org/nexus/content/groups/public/</url>
			<snapshots>
				<enabled>false</enabled>
			</snapshots>
		</repository>
		<repository>
			<id>osgeo</id>
			<name>OSGeo Release Repository</name>
			<url>https://repo.osgeo.org/repository/release/</url>
			<snapshots>
				<enabled>false</enabled>
			</snapshots>
		</repository>
	</repositories>
	<build>
		<extensions>
			<extension>
				<groupId>org.apache.maven.wagon</groupId>
				<artifactId>wagon-ssh</artifactId>
				<version>1.0</version>
			</extension>
		</extensions>
		<plugins>
			<plugin>
				<groupId>pl.project13.maven</groupId>
				<artifactId>git-commit-id-plugin</artifactId>
				<version>2.2.6</version>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-site-plugin</artifactId>
				<version>${version.site.plugin}</version>
				<dependencies>
					<dependency><!-- add support for ssh/scp -->
						<groupId>org.apache.maven.wagon</groupId>
						<artifactId>wagon-ssh</artifactId>
						<version>1.0</version>
					</dependency>
				</dependencies>
			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>sql-maven-plugin</artifactId>
				<version>1.5</version>
				<dependencies>
					<!-- specify the dependent jdbc driver here -->
					<dependency>
						<groupId>org.postgresql</groupId>
						<artifactId>postgresql</artifactId>
						<version>${postgresql.version}</version>
					</dependency>
				</dependencies>
				<!-- common configuration shared by all executions -->
				<configuration>
					<driver>org.postgresql.Driver</driver>
					<url>jdbc:postgresql://localhost:5432/chouette_test</url>
					<username>chouette</username>
					<password>chouette</password>
					<delimiterType>row</delimiterType>
					<!--all executions are ignored if -Dmaven.test.skip=true or -DskipTests=true -->
					<skip>${skipInitDb}</skip>
				</configuration>
				<executions>
					<execution>
						<id>create-schema</id>
						<phase>process-test-resources</phase>
						<goals>
							<goal>execute</goal>
						</goals>
						<configuration>
							<autocommit>true</autocommit>
							<srcFiles>
								<srcFile>${project.rootDir}/src/test/sql/chouette_test.sql</srcFile>
								<srcFile>${project.rootDir}/src/test/sql/chouette_test_transfer.sql</srcFile>
							</srcFiles>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-dependency-plugin</artifactId>
				<version>${version.dependency.plugin}</version>
				<executions>
					<execution>
						<id>unpack</id>
						<phase>process-test-resources</phase>
						<goals>
							<goal>unpack</goal>
						</goals>
						<configuration>
							<skip>${skipTests}</skip>
							<verbose>true</verbose>
							<artifactItems>
								<artifactItem>
									<groupId>org.wildfly</groupId>
									<artifactId>wildfly-dist</artifactId>
									<version>${wildfly.version}</version>
									<type>zip</type>
									<overWrite>false</overWrite>
									<outputDirectory>${project.rootDir}/target</outputDirectory>
								</artifactItem>
							</artifactItems>
						</configuration>
					</execution>
					<execution>
						<id>copy-customized-wildfly-modules-dependencies</id>
						<phase>process-resources</phase>
						<goals>
							<goal>copy</goal>
						</goals>
						<configuration>
							<verbose>true</verbose>
							<artifactItems>
								<artifactItem>
									<groupId>org.postgresql</groupId>
									<artifactId>postgresql</artifactId>
									<version>${postgresql.version}</version>
									<overWrite>false</overWrite>
									<outputDirectory>${project.rootDir}/target/wildfly-customized-dependencies/modules/org/postgres/main</outputDirectory>
								</artifactItem>
								<artifactItem>
									<groupId>net.postgis</groupId>
									<artifactId>postgis-jdbc</artifactId>
									<version>${postgis.version}</version>
									<outputDirectory>
										${project.rootDir}/target/wildfly-customized-dependencies/modules/org/postgres/main
									</outputDirectory>
								</artifactItem>
								<artifactItem>
									<groupId>net.postgis</groupId>
									<artifactId>postgis-geometry</artifactId>
									<version>${postgis.version}</version>
									<outputDirectory>
										${project.rootDir}/target/wildfly-customized-dependencies/modules/org/postgres/main
									</outputDirectory>
								</artifactItem>
								<artifactItem>
									<groupId>org.hibernate</groupId>
									<artifactId>hibernate-spatial</artifactId>
									<version>${hibernate.version}</version>
									<outputDirectory>
										${project.rootDir}/target/wildfly-customized-dependencies/modules/system/layers/base/org/hibernate/main
									</outputDirectory>
								</artifactItem>

								<artifactItem>
									<groupId>org.hibernate</groupId>
									<artifactId>hibernate-core</artifactId>
									<version>${hibernate.version}</version>
									<outputDirectory>
										${project.rootDir}/target/wildfly-customized-dependencies/modules/system/layers/base/org/hibernate/main
									</outputDirectory>
								</artifactItem>
								<artifactItem>
									<groupId>org.hibernate</groupId>
									<artifactId>hibernate-envers</artifactId>
									<version>${hibernate.version}</version>
									<outputDirectory>
										${project.rootDir}/target/wildfly-customized-dependencies/modules/system/layers/base/org/hibernate/main
									</outputDirectory>
								</artifactItem>
								<artifactItem>
									<groupId>com.vividsolutions</groupId>
									<artifactId>jts-core</artifactId>
									<version>${jts.version}</version>
									<outputDirectory>
										${project.rootDir}/target/wildfly-customized-dependencies/modules/system/layers/base/org/hibernate/main
									</outputDirectory>
								</artifactItem>
								<artifactItem>
									<groupId>org.geolatte</groupId>
									<artifactId>geolatte-geom</artifactId>
									<version>${geolatte-geom.version}</version>
									<outputDirectory>
										${project.rootDir}/target/wildfly-customized-dependencies/modules/system/layers/base/org/hibernate/main
									</outputDirectory>
								</artifactItem>

							</artifactItems>
						</configuration>
					</execution>

					<execution>
						<id>copy-prometheus-agent</id>
						<phase>package</phase>
						<goals>
							<goal>copy</goal>
						</goals>
						<configuration>
							<verbose>true</verbose>
							<artifactItems>
								<artifactItem>
									<groupId>io.prometheus.jmx</groupId>
									<artifactId>jmx_prometheus_javaagent</artifactId>
									<version>${prometheus.agent.version}</version>
									<outputDirectory>
										${project.rootDir}/target/docker/wildfly/prometheus
									</outputDirectory>
									<destFileName>jmx_prometheus_javaagent.jar</destFileName>
								</artifactItem>
							</artifactItems>
						</configuration>
					</execution>

				</executions>
			</plugin>
			<plugin>
				<artifactId>maven-resources-plugin</artifactId>
				<version>${version.resources.plugin}</version>
				<executions>
					<!-- WildFly test configuration files copy -->
					<execution>
						<id>copy-wildfly-configuration-for-test</id>
						<phase>process-test-resources</phase>
						<goals>
							<goal>copy-resources</goal>
						</goals>
						<configuration>
							<skip>${skipTests}</skip>
							<outputDirectory>${project.rootDir}/target/wildfly-${wildfly.version}</outputDirectory>
							<overwrite>true</overwrite>
							<resources>
								<resource>
									<directory>${project.rootDir}/src/main/resources-wildfly-configuration</directory>
									<filtering>true</filtering>
								</resource>
								<resource>
									<directory>${project.rootDir}/src/test/resources-wildfly-configuration</directory>
									<filtering>true</filtering>
								</resource>
								<resource>
									<directory>${project.rootDir}/target/wildfly-customized-dependencies</directory>
								</resource>
							</resources>
						</configuration>
					</execution>
					<execution>
						<id>copy-wildfly-configuration-for-docker-packaging</id>
						<phase>package</phase>
						<goals>
							<goal>copy-resources</goal>
						</goals>
						<configuration>
							<outputDirectory>${project.rootDir}/target/docker/wildfly</outputDirectory>
							<overwrite>true</overwrite>
							<resources>
								<resource>
									<directory>${project.rootDir}/src/main/resources-wildfly-configuration</directory>
									<filtering>true</filtering>
								</resource>
								<resource>
									<directory>${project.rootDir}/target/wildfly-customized-dependencies</directory>
								</resource>
							</resources>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>${version.surefire.plugin}</version>
				<configuration>
					<argLine>-Djboss.socket.binding.port-offset=300 --add-modules=java.se --add-opens=java.base/java.util=ALL-UNNAMED</argLine>
					<runOrder>alphabetical</runOrder>
					<!-- Fork every test because it will launch a separate AS instance -->
					<forkCount>1</forkCount>
					<systemPropertyVariables>
						<java.util.logging.manager>org.jboss.logmanager.LogManager</java.util.logging.manager>
						<wildfly.version>${wildfly.version}</wildfly.version>
						<!-- the maven dependency plugin will have already downloaded the server
							on /target -->
						<jboss.home>${project.rootDir}/target/wildfly-${wildfly.version}</jboss.home>
						<module.path>${project.rootDir}/target/wildfly-${wildfly.version}/modules</module.path>
					</systemPropertyVariables>
					<redirectTestOutputToFile>false</redirectTestOutputToFile>
				</configuration>
			</plugin>

			<plugin>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>${version.compiler.plugin}</version>
				<configuration>
					<source>${maven.compiler.source}</source>
					<target>${maven.compiler.target}</target>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-ejb-plugin</artifactId>
				<version>${version.ejb.plugin}</version>
				<configuration>
					<ejbVersion>3.2</ejbVersion>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.projectlombok</groupId>
				<artifactId>lombok-maven-plugin</artifactId>
				<version>${lombok-maven-plugin-version}</version>
				<executions>
					<execution>
						<id>delombok</id>
						<phase>process-sources</phase>
						<goals>
							<goal>delombok</goal>
						</goals>
						<configuration>
							<addOutputDirectory>false</addOutputDirectory>
							<sourceDirectory>src/main/java</sourceDirectory>
							<verbose>false</verbose>
							<skip>${skipDelombok}</skip>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-source-plugin</artifactId>
				<version>${version.source.plugin}</version>
				<executions>
					<execution>
						<id>attach-sources</id>
						<goals>
							<goal>jar-no-fork</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-javadoc-plugin</artifactId>
				<version>${version.javadoc.plugin}</version>
				<configuration>
					<quiet>false</quiet>
					<sourcepath>target/generated-sources/delombok</sourcepath>
					<javaApiLinks>
						<property>
							<name>api_3.1</name>
							<value>http://docs.oracle.com/javase/7/docs/api/</value>
						</property>
					</javaApiLinks>
					<source>1.8</source>
					<skip>${skipDelombok}</skip>
				</configuration>
				<executions>
					<execution>
						<id>attach-javadocs</id>
						<phase>package</phase>
						<goals>
							<goal>jar</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>org.owasp</groupId>
				<artifactId>dependency-check-maven</artifactId>
				<version>${owasp-dependency-check-plugin.version}</version>
				<configuration>
					<failOnError>false</failOnError>
					<assemblyAnalyzerEnabled>false</assemblyAnalyzerEnabled>
					<suppressionFiles>
					</suppressionFiles>
				</configuration>
			</plugin>

		</plugins>
		<pluginManagement>
			<plugins>

				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-assembly-plugin</artifactId>
					<version>${version.assembly.plugin}</version>
				</plugin>

				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>build-helper-maven-plugin</artifactId>
					<version>${version.build.helper.plugin}</version>
				</plugin>

				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-clean-plugin</artifactId>
					<version>${version.clean.plugin}</version>
				</plugin>

				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-install-plugin</artifactId>
					<version>${version.install.plugin}</version>
				</plugin>

				<plugin>
					<groupId>org.bsc.maven</groupId>
					<artifactId>maven-processor-plugin</artifactId>
					<version>${version.processor.plugin}</version>
				</plugin>


				<!--This plugin's configuration is used to store Eclipse m2e settings
					only. It has no influence on the Maven build itself. -->
				<plugin>
					<groupId>org.eclipse.m2e</groupId>
					<artifactId>lifecycle-mapping</artifactId>
					<version>1.0.0</version>
					<configuration>
						<lifecycleMappingMetadata>
							<pluginExecutions>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>org.bsc.maven</groupId>
										<artifactId>
											maven-processor-plugin
										</artifactId>
										<versionRange>
											[2.2.4,)
										</versionRange>
										<goals>
											<goal>process</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore></ignore>
									</action>
								</pluginExecution>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>
											org.apache.maven.plugins
										</groupId>
										<artifactId>
											maven-ear-plugin
										</artifactId>
										<versionRange>
											[2.9.1,)
										</versionRange>
										<goals>
											<goal>
												generate-application-xml
											</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore></ignore>
									</action>
								</pluginExecution>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>
											org.apache.maven.plugins
										</groupId>
										<artifactId>
											maven-dependency-plugin
										</artifactId>
										<versionRange>
											[2.8,)
										</versionRange>
										<goals>
											<goal>unpack</goal>
											<goal>copy</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore></ignore>
									</action>
								</pluginExecution>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>org.projectlombok</groupId>
										<artifactId>lombok-maven-plugin</artifactId>
										<versionRange>[{lombok-maven-plugin-version},)</versionRange>
										<goals>
											<goal>delombok</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore></ignore>
									</action>
								</pluginExecution>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>org.codehaus.mojo</groupId>
										<artifactId>properties-maven-plugin</artifactId>
										<versionRange>[1.0-alpha-2,)</versionRange>
										<goals>
											<goal>set-system-properties</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore></ignore>
									</action>
								</pluginExecution>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>
											org.codehaus.mojo
										</groupId>
										<artifactId>
											sql-maven-plugin
										</artifactId>
										<versionRange>
											[1.5,)
										</versionRange>
										<goals>
											<goal>execute</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore></ignore>
									</action>
								</pluginExecution>
							</pluginExecutions>
						</lifecycleMappingMetadata>
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>
	</build>
	<reporting>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-report-plugin</artifactId>
				<version>${version.surefire.plugin}</version>
			</plugin>
		</plugins>
	</reporting>
	<dependencyManagement>
		<dependencies>
			<!-- module dependencies -->
			<dependency>
				<groupId>${project.groupId}</groupId>
				<artifactId>mobi.chouette.common</artifactId>
				<version>${project.version}</version>
			</dependency>
			<dependency>
				<groupId>${project.groupId}</groupId>
				<artifactId>mobi.chouette.persistence.hibernate</artifactId>
				<version>${project.version}</version>
			</dependency>
			<dependency>
				<groupId>${project.groupId}</groupId>
				<artifactId>mobi.chouette.model</artifactId>
				<version>${project.version}</version>
			</dependency>
			<dependency>
				<groupId>${project.groupId}</groupId>
				<artifactId>mobi.chouette.model.iev</artifactId>
				<version>${project.version}</version>
			</dependency>
			<dependency>
				<groupId>${project.groupId}</groupId>
				<artifactId>mobi.chouette.dao</artifactId>
				<version>${project.version}</version>
			</dependency>
			<dependency>
				<groupId>${project.groupId}</groupId>
				<artifactId>mobi.chouette.exchange</artifactId>
				<version>${project.version}</version>
			</dependency>
 			<dependency>
				<groupId>${project.groupId}</groupId>
				<artifactId>mobi.chouette.exchange.neptune</artifactId>
				<version>${project.version}</version>
			</dependency>
			<dependency>
				<groupId>${project.groupId}</groupId>
				<artifactId>mobi.chouette.exchange.gtfs</artifactId>
				<version>${project.version}</version>
			</dependency>
	 		<dependency>
				<groupId>${project.groupId}</groupId>
				<artifactId>mobi.chouette.exchange.netex</artifactId>
				<version>${project.version}</version>
			</dependency>
			<dependency>
				<groupId>${project.groupId}</groupId>
				<artifactId>mobi.chouette.exchange.netexprofile</artifactId>
				<version>${project.version}</version>
			</dependency>
			<dependency>
				<groupId>${project.groupId}</groupId>
				<artifactId>mobi.chouette.exchange.regtopp</artifactId>
				<version>${project.version}</version>
			</dependency>
			<dependency>
				<groupId>${project.groupId}</groupId>
				<artifactId>mobi.chouette.exchange.validator</artifactId>
				<version>${project.version}</version>
			</dependency>
			<dependency>
				<groupId>${project.groupId}</groupId>
				<artifactId>mobi.chouette.exchange.transfer</artifactId>
				<version>${project.version}</version>
			</dependency>
			<dependency>
				<groupId>${project.groupId}</groupId>
				<artifactId>mobi.chouette.exchange.stopplace</artifactId>
				<version>${project.version}</version>
			</dependency>
			<dependency>
				<groupId>${project.groupId}</groupId>
				<artifactId>mobi.chouette.service</artifactId>
				<version>${project.version}</version>
			</dependency>
			<dependency>
				<groupId>${project.groupId}</groupId>
				<artifactId>mobi.chouette.ws</artifactId>
				<version>${project.version}</version>
			</dependency>

			<!-- Jakarta EE -->
			<dependency>
				<groupId>org.wildfly.bom</groupId>
				<artifactId>wildfly-jakartaee8-with-tools</artifactId>
				<version>${wildfly.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
			<dependency>
				<groupId>org.wildfly</groupId>
				<artifactId>wildfly-spec-api</artifactId>
				<version>${wildfly.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>

			<!-- Default Dependencies -->
			<dependency>
				<groupId>org.codehaus.jettison</groupId>
				<artifactId>jettison</artifactId>
				<version>${jettison.version}</version>
			</dependency>

            <dependency>
                <groupId>com.okina</groupId>
                <artifactId>netex-java-model</artifactId>
                <version>${netex-java-model.version}</version>
            </dependency>

			<dependency>
				<groupId>org.entur.ror.helpers</groupId>
				<artifactId>calendar-helper</artifactId>
				<version>${entur.helpers.version}</version>
			</dependency>


			<dependency>
				<groupId>org.entur.ror.helpers</groupId>
				<artifactId>hazelcast4-helper</artifactId>
				<version>${entur.helpers.version}</version>
			</dependency>

			<!-- Test Dependencies -->
			<dependency>
				<groupId>org.testng</groupId>
				<artifactId>testng</artifactId>
				<version>6.14.3</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>com.beust</groupId>
				<artifactId>jcommander</artifactId>
				<version>1.82</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>org.easymock</groupId>
				<artifactId>easymock</artifactId>
				<version>4.3</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>org.postgresql</groupId>
				<artifactId>postgresql</artifactId>
				<version>${postgresql.version}</version>
			</dependency>
			<dependency>
				<groupId>net.postgis</groupId>
				<artifactId>postgis-jdbc</artifactId>
				<version>${postgis.version}</version>
			</dependency>
			<dependency>
				<groupId>org.hibernate</groupId>
				<artifactId>hibernate-core</artifactId>
				<version>${hibernate.version}</version>
				<scope>provided</scope>
			</dependency>
			<dependency>
				<groupId>org.hibernate</groupId>
				<artifactId>hibernate-spatial</artifactId>
				<version>${hibernate.version}</version>
				<scope>provided</scope>
			</dependency>
			<dependency>
				<groupId>com.tobedevoured</groupId>
				<artifactId>modelcitizen</artifactId>
				<version>0.6.0</version>
				<scope>test</scope>
			</dependency>

			<dependency>
				<groupId>org.wildfly.arquillian</groupId>
				<artifactId>wildfly-arquillian-container-embedded</artifactId>
				<version>${wildfly-arquillian-container-embedded.version}</version>
			</dependency>
			<dependency>
				<groupId>org.wildfly.core</groupId>
				<artifactId>wildfly-embedded</artifactId>
				<version>${wildfly.core.version}</version>
			</dependency>

			<!-- Other Dependencies -->
			<dependency>
				<groupId>org.slf4j</groupId>
				<artifactId>slf4j-simple</artifactId>
				<version>${slf4j.version}</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>org.slf4j</groupId>
				<artifactId>log4j-over-slf4j</artifactId>
				<version>${slf4j.version}</version>
			</dependency>
			<dependency>
				<groupId>org.projectlombok</groupId>
				<artifactId>lombok</artifactId>
				<version>${lombok-version}</version>
			</dependency>
			<dependency>
				<groupId>com.jamonapi</groupId>
				<artifactId>jamon</artifactId>
				<version>2.82</version>
			</dependency>

			<!-- Utilities Dependencies -->
			<dependency>
				<groupId>com.google.guava</groupId>
				<artifactId>guava</artifactId>
				<version>${guava.version}</version>
			</dependency>
			<dependency>
				<groupId>org.zeroturnaround</groupId>
				<artifactId>zt-zip</artifactId>
				<version>${zt-zip.version}</version>
				<type>jar</type>
			</dependency>
			<dependency>
				<groupId>commons-pool</groupId>
				<artifactId>commons-pool</artifactId>
				<version>1.6</version>
			</dependency>
			<dependency>
				<groupId>commons-collections</groupId>
				<artifactId>commons-collections</artifactId>
				<version>3.2.2</version> <!-- 4.0.0 not found -->
			</dependency>
			<dependency>
				<groupId>org.apache.commons</groupId>
				<artifactId>commons-lang3</artifactId>
				<version>${commons-lang3.version}</version>
			</dependency>
			<dependency>
				<groupId>commons-beanutils</groupId>
				<artifactId>commons-beanutils</artifactId>
				<version>1.9.4</version>
			</dependency>
			<dependency>
				<groupId>commons-io</groupId>
				<artifactId>commons-io</artifactId>
				<version>2.11.0</version>
			</dependency>
			<dependency>
				<groupId>org.apache.commons</groupId>
				<artifactId>commons-compress</artifactId>
				<version>1.21</version>
			</dependency>

			<dependency>
				<groupId>xpp3</groupId>
				<artifactId>xpp3</artifactId>
				<version>1.1.3.4.O</version>
			</dependency>
			<dependency>
				<groupId>org.geotools</groupId>
				<artifactId>gt-jts-wrapper</artifactId>
				<version>${geotools.version}</version>
			</dependency>
			<dependency>
				<groupId>org.geotools</groupId>
				<artifactId>gt-epsg-wkt</artifactId>
				<version>${geotools.version}</version>
			</dependency>
			<dependency>
				<groupId>org.geotools</groupId>
				<artifactId>gt-epsg-hsql</artifactId>
				<version>${geotools.version}</version>
			</dependency>

		</dependencies>

	</dependencyManagement>

	<dependencies>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-simple</artifactId>
			<version>${slf4j.version}</version>
			<scope>test</scope>
		</dependency>

	</dependencies>

	<profiles>
		<profile>
			<id>default</id>
			<activation>
				<activeByDefault>true</activeByDefault>
			</activation>
			<properties>
				<skipWildfly>false</skipWildfly>
				<skipInitDb>false</skipInitDb>
			</properties>
		</profile>
		<profile>
			<id>skipTestCompileAndRun</id>
			<activation>
				<property>
					<name>maven.test.skip</name>
					<value>true</value>
				</property>
			</activation>
			<properties>
				<skipInitDb>true</skipInitDb>
			</properties>
		</profile>
		<profile>
			<id>skipTestRun</id>
			<activation>
				<property>
					<name>skipTests</name>
				</property>
			</activation>
			<properties>
				<skipInitDb>true</skipInitDb>
			</properties>
		</profile>
		<profile>
			<id>lombok-needs-tools-jar</id>
			<activation>
				<file>
					<missing>${java.home}/../lib/tools.jar</missing>
				</file>
			</activation>
			<properties>
				<skipDelombok>true</skipDelombok>
			</properties>
		</profile>
		<profile>
			<id>skipInitDb</id>
			<activation>
				<property>
					<name>skipInitDb</name>
				</property>
			</activation>
			<properties>
				<skipInitDb>true</skipInitDb>
			</properties>
		</profile>
		<profile>
			<id>doclint-java8-disable</id>
			<activation>
				<jdk>[1.8,)</jdk>
			</activation>

			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-javadoc-plugin</artifactId>
						<configuration>
							<additionalparam>-Xdoclint:none</additionalparam>
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>

		<profile>
			<id>sonar</id>
			<activation>
				<activeByDefault>false</activeByDefault>
			</activation>

			<properties>
				<jdk.version>11</jdk.version>
				<sonar-maven-plugin.version>3.7.0.1746</sonar-maven-plugin.version>
			</properties>

			<build>
				<plugins>

					<plugin>
						<groupId>org.sonarsource.scanner.maven</groupId>
						<artifactId>sonar-maven-plugin</artifactId>
						<version>${sonar-maven-plugin.version}</version>
					</plugin>
				</plugins>
			</build>
		</profile>

	</profiles>
	<modules>
		<module>mobi.chouette.common</module>
		<module>mobi.chouette.persistence.hibernate</module>
		<module>mobi.chouette.model</module>
		<module>mobi.chouette.model.iev</module>
		<module>mobi.chouette.dao</module>
		<module>mobi.chouette.jdbc</module>
		<module>mobi.chouette.dao.iev</module>
		<module>mobi.chouette.exchange</module>
 		<module>mobi.chouette.exchange.neptune</module>
		<module>mobi.chouette.exchange.netexprofile</module>
		<module>mobi.chouette.exchange.gtfs</module>
		<module>mobi.chouette.exchange.stopplace</module>
		<module>mobi.chouette.exchange.validator</module>
		<module>mobi.chouette.exchange.transfer</module>
		<module>mobi.chouette.service</module>
		<module>mobi.chouette.schema.checker</module>
		<module>mobi.chouette.ws</module>
		<module>chouette_iev</module>
	</modules>

</project>
